---
# tasks file for template
- name: Install Ghostty Terminal
  when: ansible_facts['os_family'] == 'Debian'
  block:
    - name: Capture user directory
      ansible.builtin.set_fact:
        usr_dir: "{{ ansible_facts['user_dir'] }}"

    - name: Set custom variable for user
      ansible.builtin.set_fact:
        usr: "{{ ansible_facts['user_id'] }}"

    - name: Ensure required packages are installed
      become: true
      ansible.builtin.apt:
        name: ['jq']
        state: present
        update_cache: true

    - name: Check if Ghostty is already installed
      ansible.builtin.command:
        cmd: ghostty --version
      register: ghostty_check
      failed_when: false
      changed_when: false

    - name: Get latest release tag from Ghostty GitHub
      become: true
      ansible.builtin.get_url:
        url: "https://api.github.com/repos/mkasberg/ghostty-ubuntu/releases/latest"
        dest: "/tmp/ghostty_latest.json"
      when: ghostty_check.rc != 0

    - name: Set permissions on release tag file
      become: true
      ansible.builtin.file:
        path: "/tmp/ghostty_latest.json"
        owner: root
        group: root
        mode: '0644'
      when: ghostty_check.rc != 0

    - name: Parse latest release tag
      ansible.builtin.shell:
        cmd: "jq -r .tag_name /tmp/ghostty_latest.json"
      register: ghostty_latest_release
      when: ghostty_check.rc != 0
      changed_when: false

    - name: Download Ghostty .deb package
      become: true
      ansible.builtin.get_url:
        url: "https://github.com/mkasberg/ghostty-ubuntu/releases/download/{{ ghostty_latest_release.stdout }}/ghostty_{{ ghostty_latest_release.stdout | regex_replace('-(?=[^-]*$)', '.') }}_amd64_{{ ansible_facts['distribution_version'] }}.deb"
        dest: "/tmp/ghostty.deb"
      when: ghostty_check.rc != 0

    - name: Set permissions on Ghostty .deb package
      become: true
      ansible.builtin.file:
        path: "/tmp/ghostty.deb"
        owner: root
        group: root
        mode: '0644'
      when: ghostty_check.rc != 0

    - name: Install Ghostty .deb package
      become: true
      ansible.builtin.command:
        cmd: dpkg -i /tmp/ghostty.deb
      when: ghostty_check.rc != 0

    - name: Cleanup temporary files
      become: true
      ansible.builtin.file:
        path: "/tmp/ghostty_latest.json"
        state: absent
      when: ghostty_check.rc != 0

    - name: Cleanup Ghostty .deb package
      become: true
      ansible.builtin.file:
        path: "/tmp/ghostty.deb"
        state: absent
      when: ghostty_check.rc != 0

    - name: Create Ghostty configuration directory
      ansible.builtin.file:
        path: "{{ usr_dir }}/.config/ghostty/"
        state: directory
        owner: "{{ usr }}"
        group: "{{ usr }}"
        mode: '0755'

    - name: Copy Ghostty setting file
      ansible.builtin.copy:
        src: config
        dest: "{{ usr_dir }}/.config/ghostty/config"
        owner: "{{ usr }}"
        group: "{{ usr }}"
        mode: '0644'
